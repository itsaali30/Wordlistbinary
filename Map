<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vue.js Map Example</title>
  <!-- Vue.js CDN -->
  <script src="https://cdn.jsdelivr.net/npm/vue@2"></script>
  <!-- Bootstrap CDN for responsive design -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4">
</head>
<body>

<div id="app" class="container">
  <h2>{{ dm }}</h2>
  <iframe
   width="490"
    height="900"
    style="border:0"
    loading="lazy"
    allowfullscreen
    referrerpolicy="no-referrer-when-downgrade"
    :src="mapUrl"
  ></iframe>
</div>

<script>
new Vue({
  el: '#app',
  data: {
    lat: null,
    long: null,
    mapUrl: '',
    apikey: 'AIzaSyA3fsf0hoMkAdiGIZtyLqL3NpD8KZ5cHsI',
    dm: [],
    isDesktop: true, // Initially assume desktop
  },
  mounted() {
    this.checkScreenSize();
    setInterval(this.getLocation, 1000);
    window.addEventListener('resize', this.checkScreenSize);
  },
  methods: {
    getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(this.showPosition);
      } else {
        alert("Geolocation is not supported by this browser.");
      }
    },
    showPosition(position) {
      this.lat = position.coords.latitude;
      this.long = position.coords.longitude;
      this.mapUrl = `https://www.google.com/maps/embed/v1/place?key=${this.apikey}&q=${this.lat},${this.long}`;
      const coordinates = [this.lat, this.long];
      if (!this.dm.some(pair => pair[0] === this.lat && pair[1] === this.long)) {
        this.dm.push(coordinates);
      }
    },
    checkScreenSize() {
      this.isDesktop = window.innerWidth >= 992; // 992px is Bootstrap's LG breakpoint
    },
  },
});
</script>

</body>
</html>
